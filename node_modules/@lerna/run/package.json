{
  "_args": [
    [
      "@lerna/run@3.11.0",
      "/home/mukundap/projects/hospital/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/run@3.11.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/run@3.11.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@lerna/run",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/run_3.11.0_1549589916212_0.39291834794754377"
  },
  "_npmUser": {
    "email": "daniel.stockman@gmail.com",
    "name": "evocateur"
  },
  "_npmVersion": "lerna/3.11.0/node@v10.15.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "@lerna/run",
    "raw": "@lerna/run@3.11.0",
    "rawSpec": "3.11.0",
    "scope": "@lerna",
    "spec": "3.11.0",
    "type": "version"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/run/-/run-3.11.0.tgz",
  "_shasum": "2a07995ccd570230d01ee8fe2e8c6b742ed58c37",
  "_shrinkwrap": null,
  "_spec": "@lerna/run@3.11.0",
  "_where": "/home/mukundap/projects/hospital/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/batch-packages": "3.11.0",
    "@lerna/command": "3.11.0",
    "@lerna/filter-options": "3.11.0",
    "@lerna/npm-run-script": "3.11.0",
    "@lerna/output": "3.11.0",
    "@lerna/run-parallel-batches": "3.0.0",
    "@lerna/timer": "3.5.0",
    "@lerna/validation-error": "3.11.0",
    "p-map": "^1.2.0"
  },
  "description": "Run an npm script in each package that contains that script",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 6,
    "integrity": "sha512-8c2yzbKJFzgO6VTOftWmB0fOLTL7G1GFAG5UTVDSk95Z2Gnjof3I/Xkvtbzq8L+DIOLpr+Tpj3fRBjZd8rONlA==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXN2cCRA9TVsSAnZWagAAPhEP/2xzbSztaOlUp2KfnM1t\nVCpL6oEE6PkESbzqeIyafrhZ+pi565zMb0gJBRy89aEUwgSUGND5H75YNvHS\nTEvyNODPZ14U2kXoQMo/xkTFzQqGZfyLKE+vkdiKmLnayjX0dc3ZAIDWK5j+\n2Tabigp5O8IRc+21rrVwPxpszpGlFbN99KQ/Y55g1i6uJuxcyjuZfwZF0NcH\nuz+GwRnzl+uk7sS32gcD3wxG0RGD7WHBfjLHBkMs72CjJNREHy2F35sllTUl\n26R6WNqsUhhM3iWwTUS7KPL3/cBp9d5+udcN9JOGSzPEs5PTGPzSQ2BLQj60\n7uBsE60kH9sNH9uYutldo/0tKIZ+2hjMQF/q3A9n0Y+G7hwweku5/7fYbFaG\nV6aiH+Y5PaZzZ8spFutqdComeZzvv+V3e9bFT6NcdunuNmH8aInVJfBduLEP\nxZvQa/REsjg4YS1dlNi7p3B/VXqHHW3tmgfoH0HG7t6V5GMy0/cD33J9GJY5\nIsnAD/JDFF4Qf6GDUJSpxE2v4qnBZGyppY5V+kr4JvZK45NrkduocbPvtH71\nAYO6e584oSNBCx68mWHzYY91BiFfHXeWJE8iCIR82Tfu3ZjmG1yHcWvRH5Z8\nqGjMA9vLhmnVc1Bmdi4/3LbcrIvZEBRaGD+4nAUtSbdozERmoIyWZXfLM2NG\nUNHD\r\n=ytiP\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "2a07995ccd570230d01ee8fe2e8c6b742ed58c37",
    "tarball": "https://registry.npmjs.org/@lerna/run/-/run-3.11.0.tgz",
    "unpackedSize": 20139
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "gitHead": "45a05acf2d52a46f553fc1efadf9a32312aca82b",
  "homepage": "https://github.com/lerna/lerna",
  "keywords": [
    "lerna",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "daniel.stockman@gmail.com",
      "name": "evocateur"
    },
    {
      "email": "hi@henryzoo.com",
      "name": "hzoo"
    }
  ],
  "name": "@lerna/run",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/run`\n\n> Run an npm script in each package that contains that script\n\n## Usage\n\n```sh\n$ lerna run <script> -- [..args] # runs npm run my-script in all packages that have it\n$ lerna run test\n$ lerna run build\n\n# watch all packages and transpile on change, streaming prefixed output\n$ lerna run --parallel watch\n```\n\nRun an [npm script](https://docs.npmjs.com/misc/scripts) in each package that contains that script. A double-dash (`--`) is necessary to pass dashed arguments to the script execution.\n\n## Options\n\n`lerna run` respects the `--concurrency`, `--scope`, and `--ignore` flags (see [Filter Flags](https://www.npmjs.com/package/@lerna/filter-options)).\n\n```sh\n$ lerna run --scope my-component test\n```\n\n### `--npm-client <client>`\n\nMust be an executable that knows how to run npm lifecycle scripts.\nThe default `--npm-client` is `npm`.\n\n```sh\n$ lerna run build --npm-client=yarn\n```\n\nMay also be configured in `lerna.json`:\n\n```json\n{\n  \"command\": {\n    \"run\": {\n      \"npmClient\": \"yarn\"\n    }\n  }\n}\n```\n\n### `--stream`\n\nStream output from child processes immediately, prefixed with the originating\npackage name. This allows output from different packages to be interleaved.\n\n```sh\n$ lerna run watch --stream\n```\n\n### `--parallel`\n\nSimilar to `--stream`, but completely disregards concurrency and topological sorting, running a given command or script immediately in all matching packages with prefixed streaming output. This is the preferred flag for long-running processes such as `npm run watch` run over many packages.\n\n```sh\n$ lerna run watch --parallel\n```\n\n> **Note:** It is advised to constrain the scope of this command when using\n> the `--parallel` flag, as spawning dozens of subprocesses may be\n> harmful to your shell's equanimity (or maximum file descriptor limit,\n> for example). YMMV\n\n### `--no-bail`\n\n```sh\n# Run an npm script in all packages that contain it, ignoring non-zero (error) exit codes\n$ lerna run --no-bail test\n```\n\nBy default, `lerna run` will exit with an error if _any_ script run returns a non-zero exit code.\nPass `--no-bail` to disable this behavior, running the script in _all_ packages that contain it regardless of exit code.\n\n### `--no-prefix`\n\nDisable package name prefixing when output is streaming (`--stream` _or_ `--parallel`).\nThis option can be useful when piping results to other processes, such as editor plugins.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "3.11.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "pkgid": "@lerna/run@3.11.0",
      "required": {
        "node": ">= 6.9.0"
      }
    }
  ],
  "yargs": {
    "populate--": true
  }
}
