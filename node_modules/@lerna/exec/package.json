{
  "_args": [
    [
      "@lerna/exec@3.11.0",
      "/home/mukundap/projects/hospital/node_modules/lerna"
    ]
  ],
  "_from": "@lerna/exec@3.11.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/exec@3.11.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@lerna/exec",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/exec_3.11.0_1549589912883_0.2759068596931693"
  },
  "_npmUser": {
    "email": "daniel.stockman@gmail.com",
    "name": "evocateur"
  },
  "_npmVersion": "lerna/3.11.0/node@v10.15.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "@lerna/exec",
    "raw": "@lerna/exec@3.11.0",
    "rawSpec": "3.11.0",
    "scope": "@lerna",
    "spec": "3.11.0",
    "type": "version"
  },
  "_requiredBy": [
    "/lerna"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/exec/-/exec-3.11.0.tgz",
  "_shasum": "391351b024ec243050f54ca92cef5d298dc821d4",
  "_shrinkwrap": null,
  "_spec": "@lerna/exec@3.11.0",
  "_where": "/home/mukundap/projects/hospital/node_modules/lerna",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/batch-packages": "3.11.0",
    "@lerna/child-process": "3.3.0",
    "@lerna/command": "3.11.0",
    "@lerna/filter-options": "3.11.0",
    "@lerna/run-parallel-batches": "3.0.0",
    "@lerna/validation-error": "3.11.0"
  },
  "description": "Execute an arbitrary command in each package",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 6,
    "integrity": "sha512-oIkI+Hj74kpsnHhw0qJj12H4XMPSlDbBsshLWY+f3BiwKhn6wkXoQZ1FC8/OVNHM67GtSRv4bkcOaM4ucHm9Hw==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXN2ZCRA9TVsSAnZWagAABXMP/RebtDfl+NPpBtfFwhbd\nBTbBz+9B/AY5jr3XBIlH5bsx95dJ2OVifnJ9uVjwoSdZs71i+HS0KxrWT9/4\nK7nrXsCj0SCfxDjGAHdbMPjEtIBGBdhSG8g0nlX0r2qlw/Ff9RP20wxBoOEV\nkfqdZq1I9bYbS4U5+GaEhOUuBqGTT58hE9xyr4YAaHt9HppBRToIvANIpYFW\nclYB3MyEAqLLETrJbFKEUQm0DkxOqdcRfVLX48hQ2JtrZ84PTdiGP3azy/qQ\nW1pAAR39H0fis7yATGdcfgPMyGzB/4dNSY1xV1NDVb5/3bYT277ayDigVzOo\nOiSxFYRjE2mxOh4qZJMjAW8SdbuDPsFXmRT59eoUew3U1ft8TM85dGeu08Po\nN8wK8guRd40xom+S9MD0JURayFNiVSFfEqb1rPb3/bEIl7HlHdQE7i9ohiGE\n/w2XXeM538nYYiYpUWWfKK9bijQaEn9FcmKWfqSKacwuw/ENjNIHYuxww+/u\njWbtZ8/ywrn5VGyfQmaDH11M6VSMGPiUqIWFp8Ts9NaoRfcO3s740Ml71/k9\nfIHIp9k3A4Suq46Yu31PyOZqsJYgEoX6gr+bpYfFkSyyMubR5SDEa5CMQ3My\nKy+5k9glQWjon+XBuJZi+cBdpT5QprbuToqaLnkkAWrfZTlR0Gzjzcu05WXn\nDG8X\r\n=4+wX\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "391351b024ec243050f54ca92cef5d298dc821d4",
    "tarball": "https://registry.npmjs.org/@lerna/exec/-/exec-3.11.0.tgz",
    "unpackedSize": 19523
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "gitHead": "45a05acf2d52a46f553fc1efadf9a32312aca82b",
  "homepage": "https://github.com/lerna/lerna",
  "keywords": [
    "lerna",
    "command"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "daniel.stockman@gmail.com",
      "name": "evocateur"
    },
    {
      "email": "hi@henryzoo.com",
      "name": "hzoo"
    }
  ],
  "name": "@lerna/exec",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/exec`\n\n> Execute an arbitrary command in each package\n\n## Usage\n\n```sh\n$ lerna exec -- <command> [..args] # runs the command in all packages\n$ lerna exec -- rm -rf ./node_modules\n$ lerna exec -- protractor conf.js\n```\n\nRun an arbitrary command in each package.\nA double-dash (`--`) is necessary to pass dashed flags to the spawned command, but is not necessary when all the arguments are positional.\n\nThe name of the current package is available through the environment variable `LERNA_PACKAGE_NAME`:\n\n```sh\n$ lerna exec -- npm view \\$LERNA_PACKAGE_NAME\n```\n\nYou may also run a script located in the root dir, in a complicated dir structure through the environment variable `LERNA_ROOT_PATH`:\n\n```sh\n$ lerna exec -- node \\$LERNA_ROOT_PATH/scripts/some-script.js\n```\n\n## Options\n\n`lerna exec` respects the `--concurrency`, `--scope`, and `--ignore` flags (see [Filter Flags](https://www.npmjs.com/package/@lerna/filter-options)).\n\n```sh\n$ lerna exec --scope my-component -- ls -la\n```\n\n> The commands are spawned in parallel, using the concurrency given (except with `--parallel`).\n> The output is piped through, so not deterministic.\n> If you want to run the command in one package after another, use it like this:\n\n```sh\n$ lerna exec --concurrency 1 -- ls -la\n```\n\n### `--stream`\n\nStream output from child processes immediately, prefixed with the originating\npackage name. This allows output from different packages to be interleaved.\n\n```sh\n$ lerna exec --stream -- babel src -d lib\n```\n\n### `--parallel`\n\nSimilar to `--stream`, but completely disregards concurrency and topological sorting, running a given command or script immediately in all matching packages with prefixed streaming output. This is the preferred flag for long-running processes such as `babel src -d lib -w` run over many packages.\n\n```sh\n$ lerna exec --parallel -- babel src -d lib -w\n```\n\n> **Note:** It is advised to constrain the scope of this command when using\n> the `--parallel` flag, as spawning dozens of subprocesses may be\n> harmful to your shell's equanimity (or maximum file descriptor limit,\n> for example). YMMV\n\n### `--no-bail`\n\n```sh\n# Run a command, ignoring non-zero (error) exit codes\n$ lerna exec --no-bail <command>\n```\n\nBy default, `lerna exec` will exit with an error if _any_ execution returns a non-zero exit code.\nPass `--no-bail` to disable this behavior, executing in _all_ packages regardless of exit code.\n\n### `--no-prefix`\n\nDisable package name prefixing when output is streaming (`--stream` _or_ `--parallel`).\nThis option can be useful when piping results to other processes, such as editor plugins.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "3.11.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "pkgid": "@lerna/exec@3.11.0",
      "required": {
        "node": ">= 6.9.0"
      }
    }
  ],
  "yargs": {
    "populate--": true
  }
}
