{
  "_args": [
    [
      "@lerna/project@3.11.0",
      "/home/mukundap/projects/hospital/node_modules/@lerna/command"
    ]
  ],
  "_from": "@lerna/project@3.11.0",
  "_hasShrinkwrap": false,
  "_id": "@lerna/project@3.11.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/@lerna/project",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/project_3.11.0_1549589892753_0.36625512184933706"
  },
  "_npmUser": {
    "email": "daniel.stockman@gmail.com",
    "name": "evocateur"
  },
  "_npmVersion": "lerna/3.11.0/node@v10.15.0+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "name": "@lerna/project",
    "raw": "@lerna/project@3.11.0",
    "rawSpec": "3.11.0",
    "scope": "@lerna",
    "spec": "3.11.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@lerna/command"
  ],
  "_resolved": "https://registry.npmjs.org/@lerna/project/-/project-3.11.0.tgz",
  "_shasum": "3f403e277b724a39e5fd9124b6978c426815c588",
  "_shrinkwrap": null,
  "_spec": "@lerna/project@3.11.0",
  "_where": "/home/mukundap/projects/hospital/node_modules/@lerna/command",
  "author": {
    "name": "Daniel Stockman",
    "url": "https://github.com/evocateur"
  },
  "bugs": {
    "url": "https://github.com/lerna/lerna/issues"
  },
  "dependencies": {
    "@lerna/package": "3.11.0",
    "@lerna/validation-error": "3.11.0",
    "cosmiconfig": "^5.0.2",
    "dedent": "^0.7.0",
    "dot-prop": "^4.2.0",
    "glob-parent": "^3.1.0",
    "globby": "^8.0.1",
    "load-json-file": "^4.0.0",
    "npmlog": "^4.1.2",
    "p-map": "^1.2.0",
    "resolve-from": "^4.0.0",
    "write-json-file": "^2.3.0"
  },
  "description": "Lerna project configuration",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 9,
    "integrity": "sha512-j3DGds+q/q2YNpoBImaEsMpkWgu5gP0IGKz1o1Ju39NZKrTPza+ARIzEByL4Jqu87tcoOj7RbZzhhrBP8JBbTg==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcXN2FCRA9TVsSAnZWagAAIpwP/3jCzbK8bvdN5KQTJXsx\n58W3WUoofNnDgl5w0ja4owHJGQ6G4sctQbFyfhH5PabEAqfBAdtpOebjzeOQ\nERFYcbUWlFVQbguZ4Ts/gDq7OYiN3Txs92yLYe0qbzj+GjOxcsJRvExgHbwh\nm2f/GWLMh5mXMZAzGfEKOicSoiqyt/SI6TTko7U8MOqsRBzBthxTSXKzDw3L\ncFAjqbdqxmLUFOV61tQ0AJlU901MIRBaWrfQ/odvitK59lMTr8n991f0579a\ntm6CttcIPuze7TetnET/hpYGPr3iUX6SG8Wx2wUbQ/nuW+ZQUVxm5axcEH1+\n1qwx9S2CpVo++Rq+jzX6HbdUmr6lRuvwdL5LOWTIwMwMm56C1fTQ9zaA3mSh\nFjezw/wdlgDfSsL7DMcS3WofvGfVL1oB+p6dgKoG0X1dqPjT1rfz8a7NT7lK\nKYJ+nltVBJecttVJBeyeJ785qkXJh0CtLURYd0MH+XPF+1GEAmoEXt9pqIwI\nGD+jJnzLZpclilMdk3QUZTX2+zkLAwMLJ72up10pMGRSTef3ZW63gLMEJw+m\naak9UVXkU8StjXUFElXFigwu0peCKNzN2IBk9Bv4h5C9RE4GivMdz9Vk/ndm\nQAEZPdhNxB+sk0LXzMQwvtDIs/Jh08WK5C3KOnDTaFk4x4NTzpOEsAA0+Wtv\nSHJR\r\n=kXbq\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "3f403e277b724a39e5fd9124b6978c426815c588",
    "tarball": "https://registry.npmjs.org/@lerna/project/-/project-3.11.0.tgz",
    "unpackedSize": 20666
  },
  "engines": {
    "node": ">= 6.9.0"
  },
  "gitHead": "45a05acf2d52a46f553fc1efadf9a32312aca82b",
  "homepage": "https://github.com/lerna/lerna",
  "keywords": [
    "lerna",
    "core"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "daniel.stockman@gmail.com",
      "name": "evocateur"
    },
    {
      "email": "hi@henryzoo.com",
      "name": "hzoo"
    }
  ],
  "name": "@lerna/project",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# `@lerna/project`\n\n> Lerna project configuration\n\n## Configuration Resolution\n\nLerna's file-based configuration is located in `lerna.json` or the `lerna` property of `package.json`.\nWherever this configuration is found is considered the \"root\" of the lerna-managed multi-package repository.\nA minimum-viable configuration only needs a `version` property; the following examples are equivalent:\n\n```json\n{\n  \"version\": \"1.2.3\"\n}\n```\n\n```json\n{\n  \"name\": \"my-monorepo\",\n  \"version\": \"0.0.0-root\",\n  \"private\": true,\n  \"lerna\": {\n    \"version\": \"1.2.3\"\n  }\n}\n```\n\nAny other properties on this configuration object will be used as defaults for CLI options of _all_ lerna subcommands. That is to say, CLI options _always_ override values found in configuration files (a standard practice for CLI applications).\n\n### Command-Specific Configuration\n\nTo focus configuration on a particular subcommand, use the `command` subtree. Each subproperty of `command` corresponds to a lerna subcommand (`publish`, `create`, `run`, `exec`, etc).\n\n```json\n{\n  \"version\": \"1.2.3\",\n  \"command\": {\n    \"publish\": {\n      \"loglevel\": \"verbose\"\n    }\n  },\n  \"loglevel\": \"success\"\n}\n```\n\nIn the example above, `lerna publish` will act as if `--loglevel verbose` was passed.\nAll other subcommands will receive the equivalent of `--loglevel success` (much much quieter).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lerna/lerna.git"
  },
  "scripts": {
    "test": "echo \"Run tests from root\" && exit 1"
  },
  "version": "3.11.0",
  "warnings": [
    {
      "code": "ENOTSUP",
      "pkgid": "@lerna/project@3.11.0",
      "required": {
        "node": ">= 6.9.0"
      }
    }
  ]
}
